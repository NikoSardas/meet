{"version":3,"sources":["components/Event.js","components/EventList.js","components/CitySearch.js","components/NumberOfEvents.js","WelcomeScreen.jsx","api.js","components/Alert.js","components/wickedbackground.svg","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","event","this","props","Card","className","Body","onClick","setState","Title","summary","Text","location","Date","start","dateTime","toString","slice","description","Component","EventList","events","key","map","CitySearch","displayedSelection","infoText","handleItemClicked","updateEvents","undefined","locations","Dropdown","Toggle","variant","id","Menu","Item","value","NumberOfEvents","ErrorText","eventsNumber","numberOfEvents","Form","onSubmit","e","preventDefault","Group","controlId","Control","type","min","max","onChange","changeEventsNumber","target","WelcomeScreen","isOnline","window","addEventListener","navigator","onLine","extractLocations","Set","getEvents","a","setInterval","console","log","NProgress","data","localStorage","getItem","done","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","result","setItem","stringify","accessToken","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","href","getToken","fetch","then","res","json","catch","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","WarningAlert","color","getStyle","style","text","App","allEvents","displayedEvents","currentLocation","showWelcomeScreen","eventCount","filter","logOut","componentDidMount","mounted","Container","Row","Navbar","expand","alt","src","logo","Brand","Collapse","Nav","Button","open","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","querySelector","URL","process","origin","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bda301c5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/card'\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    collapsed: true,\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props\r\n    const { collapsed } = this.state\r\n\r\n    return (\r\n      <Card className=\"event-card\">\r\n        <Card.Body\r\n          className=\"event-card-body\"\r\n          onClick={() => this.setState({ collapsed: !collapsed })}\r\n        >\r\n          <div className=\"card-top\">\r\n            <div className=\"card-top-left\">\r\n              <Card.Title className=\"event-summary\">{event.summary}</Card.Title>\r\n            </div>\r\n            <div className=\"card-top-right\">\r\n              <Card.Text className=\"event-details\">\r\n                {event.location}\r\n                <br />\r\n                {new Date(event.start.dateTime).toString().slice(3, 21)}\r\n              </Card.Text>\r\n            </div>\r\n          </div>\r\n          <Card.Text\r\n            className={`event-description ${collapsed ? 'd-none' : ''}`}\r\n          >\r\n            {event.description}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event\r\n","import React, { Component } from 'react'\r\nimport Event from './Event'\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props\r\n    let key = 0\r\n    return (\r\n      <div className=\"EventList row\">\r\n        {events.map((event) => (\r\n          <div\r\n            className=\"col-sm-12 col-md-6 col-lg-3 event-card-wrapper\"\r\n            key={++key}\r\n          >\r\n            <Event event={event} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EventList\r\n","import React, { Component } from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n// import { InfoAlert } from './Alert'\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    displayedSelection: 'See all cities',\r\n    infoText: '',\r\n  }\r\n\r\n  handleItemClicked = (location) => {\r\n    const { updateEvents } = this.props\r\n    this.setState({ displayedSelection: location })\r\n    updateEvents(location, undefined)\r\n    location !== 'See all cities'\r\n      ? this.setState({ infoText: location + ' selected' })\r\n      : this.setState({ infoText: '' })\r\n  }\r\n  render() {\r\n    const { locations } = this.props\r\n    const { displayedSelection } = this.state\r\n    return (\r\n      <div className=\"CitySearch mt-3 mb-3\">\r\n        {/* <InfoAlert className=\"info-alert alert\" text={this.state.infoText} /> */}\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n            <span className=\"displayed-selection\">{displayedSelection}</span>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className=\"suggestions\">\r\n            <Dropdown.Item\r\n              className=\"all-cities\"\r\n              onClick={() => this.handleItemClicked('See all cities')}\r\n            >\r\n              See all cities\r\n            </Dropdown.Item>\r\n            {locations.map((location) => (\r\n              <Dropdown.Item\r\n                className=\"city\"\r\n                value={location}\r\n                key={location}\r\n                onClick={() => this.handleItemClicked(location)}\r\n              >\r\n                {location}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CitySearch\r\n","import React, { Component } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\n// import { ErrorAlert } from './Alert'\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    ErrorText: '',\r\n  }\r\n\r\n  changeEventsNumber(eventsNumber) {\r\n    if (eventsNumber > 44)\r\n      this.setState({ ErrorText: 'Number is larger than ' + 44 })\r\n    if (eventsNumber < 22)\r\n      this.setState({ ErrorText: 'Number is smaller than ' + 22 })\r\n    if (eventsNumber > 22 && eventsNumber < 44) this.setState({ ErrorText: '' })\r\n    this.props.updateEvents(undefined, eventsNumber)\r\n  }\r\n  render() {\r\n    const { numberOfEvents } = this.props\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        {/* <ErrorAlert className=\"error-alert alert\" text={this.state.ErrorText} /> */}\r\n        <Form\r\n          onSubmit={(e) => {\r\n            e.preventDefault()\r\n          }}\r\n        >\r\n          <Form.Group\r\n            className=\"number-of-events mt-3\"\r\n            controlId=\"formRangeSlider\"\r\n          >\r\n            <Form.Control\r\n              className=\"number-slider\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"64\"\r\n              value={numberOfEvents}\r\n              onChange={(e) => {\r\n                this.changeEventsNumber(e.target.value)\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Events displayed: {numberOfEvents}\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents\r\n","import React from 'react'\r\nimport './styles/WelcomeScreen.css'\r\n\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ? (\r\n    <div className=\"WelcomeScreen\">\r\n    \r\n      <div className=\"background\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n     \r\n      <h1>Welcome to the Meet app</h1>\r\n    \r\n      <div className=\"button_cont\" align=\"center\">\r\n        <div className=\"google-btn\">\r\n          <button\r\n            onClick={() => {\r\n              props.getAccessToken()\r\n            }}\r\n            rel=\"nofollow noopener\"\r\n            className=\"btn-text\"\r\n          >\r\n            <span className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"Google sign-in\"\r\n              />\r\n            </span>\r\n            <b>Sign in with google</b>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    \r\n      <a\r\n        href=\"https://NikoSardas.github.io/meet/privacy.html\"\r\n        rel=\"nofollow noopener\"\r\n      >\r\n        Privacy policy\r\n      </a>\r\n      \r\n    </div>\r\n  ) : null\r\n}\r\nexport default WelcomeScreen\r\n","import { mockData } from './mock-data'\nimport axios from 'axios'\nimport NProgress, { set } from 'nprogress'\n\nimport './styles/nprogress.css'\n\nlet isOnline\n\nwindow.addEventListener('load', () => {\n  navigator.onLine ? (isOnline = true) : (isOnline = false)\n  window.addEventListener('online', () => {\n    isOnline = true\n  })\n  window.addEventListener('offline', () => {\n    isOnline = false\n  })\n})\n\nexport const extractLocations = (events) => {\n  const extractLocations = events.map((event) => event.location)\n  const locations = [...new Set(extractLocations)]\n  return locations\n}\n\nexport const getEvents = async () => {\n  setInterval(function(){\n    console.log('isOnline:', isOnline, 'navigator.onLine:', navigator.onLine)\n  },1000)\n\n  NProgress.start()\n\n  // if (window.location.href.startsWith('http://localhost')) {\n  //   NProgress.done()\n  //   return mockData\n  // }\n\n  if (!isOnline) {\n    const data = localStorage.getItem('lastEvents')\n    NProgress.done()\n    return data ? JSON.parse(data).events : []\n  }\n\n  const token = await getAccessToken()\n  if (token) {\n    removeQuery()\n    const url =\n      'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-events' +\n      '/' +\n      token\n    const result = await axios.get(url)\n    if (result.data) {\n      console.log('token result', result)\n      var locations = extractLocations(result.data.events)\n      localStorage.setItem('lastEvents', JSON.stringify(result.data))\n      localStorage.setItem('locations', JSON.stringify(locations))\n    }\n    NProgress.done()\n    return result.data.events\n  }\n}\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token')\n  const tokenCheck = accessToken && (await checkToken(accessToken))\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token')\n    const searchParams = new URLSearchParams(window.location.search)\n    const code = await searchParams.get('code')\n\n    if (!code) {\n      const results = await axios.get(\n        'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\n      )\n      const { authUrl } = results.data\n      return (window.location.href = authUrl)\n    }\n    return code && getToken(code)\n  }\n  return accessToken\n}\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json())\n\n  return result\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname\n    window.history.pushState('', '', newurl)\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host\n    window.history.pushState('', '', newurl)\n  }\n}\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code)\n  const { access_token } = await fetch(\n    `https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/token` +\n      '/' +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json()\n    })\n    .catch((error) => error)\n\n  access_token && localStorage.setItem('access_token', access_token)\n\n  return access_token\n}\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class InfoAlert extends Alert {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.color = 'blue';\r\n//   }\r\n// }\r\n\r\n// class ErrorAlert extends Alert {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.color = 'red';\r\n//   }\r\n// }\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'black';\r\n  }\r\n}\r\n\r\nexport { WarningAlert };\r\n// export { InfoAlert };\r\n// export { ErrorAlert };\r\n","export default __webpack_public_path__ + \"static/media/wickedbackground.0ed0803d.svg\";","import React, { Component } from 'react'\n// import React, { Component, PureComponent } from 'react'\n\nimport EventList from './EventList'\nimport CitySearch from './CitySearch'\nimport NumberOfEvents from './NumberOfEvents'\nimport WelcomeScreen from '../WelcomeScreen.jsx'\n\nimport { getEvents, extractLocations, checkToken, getAccessToken } from '../api'\n\nimport { WarningAlert } from './Alert'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\n\n// import {\n//   PieChart,\n//   Pie,\n//   Sector,\n//   Cell,\n//   ScatterChart,\n//   Scatter,\n//   XAxis,\n//   YAxis,\n//   CartesianGrid,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from 'recharts'\n\nimport logo from './wickedbackground.svg'\nimport '../styles/App.css'\n\nclass App extends Component {\n  state = {\n    allEvents: [],\n    displayedEvents: [],\n    locations: [],\n    currentLocation: '',\n    numberOfEvents: 32,\n    showWelcomeScreen: undefined,\n  }\n  async componentDidMount() {\n    this.mounted = true\n    // const accessToken = localStorage.getItem('access_token')\n    // const isTokenValid = (await checkToken(accessToken)).error ? false : true //original\n    // const isTokenValid = (await checkToken(accessToken)).error ? true : false\n    // const searchParams = new URLSearchParams(window.location.search)\n    // const code = searchParams.get('code')\n    // console.log(\n    //   'accessToken',\n    //   accessToken,\n    //   'isTokenValid',\n    //   isTokenValid,\n    //   'searchParams',\n    //   searchParams,\n    //   'code',\n    //   code\n    // )\n\n    // this.setState({ showWelcomeScreen: !(code || isTokenValid) })\n\n    // if ((code || isTokenValid) && this.mounted) {\n    getEvents().then((events) => {\n      const allEvents = events\n\n      if (this.mounted) {\n        this.setState({\n          displayedEvents: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events),\n          allEvents,\n          currentLocation: 'See all cities',\n        })\n      }\n    })\n    // }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  updateEvents = (location, eventCount) => {\n    let allEvents = this.state.allEvents\n\n    if (!eventCount) {\n      eventCount = this.state.numberOfEvents\n      this.setState({ currentLocation: location })\n    }\n    if (!location) {\n      location = this.state.currentLocation\n      this.setState({\n        numberOfEvents: eventCount,\n      })\n    }\n\n    let events =\n      location === 'See all cities'\n        ? allEvents\n        : allEvents.filter((event) => event.location === location)\n\n    this.setState({\n      displayedEvents: events.slice(0, eventCount),\n    })\n  }\n\n  logOut = () => {\n    localStorage.removeItem('access_token')\n    this.componentDidMount()\n  }\n\n  // getData = () => {\n  //   const { locations, displayedEvents } = this.state\n  //   const data = locations.map((location) => {\n  //     const number = displayedEvents.filter(\n  //       (event) => event.location === location\n  //     ).length\n  //     const city = location.split(', ').shift()\n  //     return { city, number }\n  //   })\n  //   return data\n  // }\n\n  render() {\n    const { displayedEvents, locations, numberOfEvents, showWelcomeScreen } =\n      this.state\n    // if (showWelcomeScreen === undefined) {\n    //   return <div className=\"App\" />\n    // }\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <WarningAlert\n              text={!navigator.onLine ? 'No internet connection' : ''}\n            ></WarningAlert>\n            <Navbar expand=\"nope\">\n              <div>\n                <img className=\"navbar-logo\" alt=\"Logo\" src={logo} />\n                <Navbar.Brand className=\"meet-logo\">Meet</Navbar.Brand>\n              </div>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"inputFields\">\n                  <div className=\"buttons\">\n                    <Button\n                      variant=\"outline-secondary\"\n                      className=\"portfolio-link mt-2\"\n                      onClick={() => {\n                        window.open('http://www.nikosardas.com/')\n                      }}\n                    >\n                      By Niko Sardas\n                    </Button>\n                    <Button\n                      variant=\"outline-secondary\"\n                      className=\"logout-button mt-2\"\n                      onClick={this.logOut}\n                    >\n                      Logout\n                    </Button>\n                  </div>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n          </Row>\n          {/* <ResponsiveContainer height={400}>\n            <ScatterChart\n              width={400}\n              height={400}\n              margin={{\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20,\n              }}\n            >\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n                allowDecimals={false}\n              />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer> */}\n          <Row>\n            <div className=\"number-of-events-wrapper\">\n              <NumberOfEvents\n                numberOfEvents={numberOfEvents}\n                updateEvents={this.updateEvents}\n              />\n            </div>\n            <div className=\"city-search-wrapper\">\n              <CitySearch\n                locations={locations}\n                updateEvents={this.updateEvents}\n              />\n            </div>\n          </Row>\n          <EventList events={displayedEvents} />\n        </Container>\n        {/* <WelcomeScreen\n          showWelcomeScreen={showWelcomeScreen}\n          getAccessToken={() => {\n            getAccessToken()\n          }}\n        /> */}\n      </div>\n    )\n  }\n}\nexport default App\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config)\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              console.log('Content is cached for offline use.')\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\nimport * as atatus from 'atatus-spa'\n\natatus.config('610ee4fd495b4ebba32404e51e243f0e').install()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n\nserviceWorkerRegistration.register()\n\nreportWebVitals()\n\natatus.config('610ee4fd495b4ebba32404e51e243f0e').install()\n"],"sourceRoot":""}