{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","this","setState","event","props","className","Card","Body","Title","summary","Text","location","start","dateTime","end","timeZone","description","Button","onClick","toggleCollapsed","variant","Component","EventList","events","map","etag","CitySearch","query","suggestions","handleInputChanged","locations","value","target","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","NumberOfEvents","eventsNumber","localStorage","getItem","isNaN","setItem","e","changeEventsNumber","mockData","kind","organizer","email","self","extractLocations","Set","getEvents","a","NProgress","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","result","data","JSON","stringify","accessToken","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.96c01189.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nclass Event extends Component {\r\n    state = {\r\n        collapsed: true,\r\n    }\r\n    toggleCollapsed(collapsed) {\r\n        this.setState({\r\n            collapsed: !collapsed,\r\n        })\r\n    }\r\n\r\n    // convertDate(date) {\r\n    //     const newDate = new Date(date).toString().slice(3, 21)\r\n    //     return newDate\r\n    // }\r\n\r\n    // timeFromDate(date) {\r\n    //     const newDate = new Date(date).toString().slice(15, 21)\r\n    //     return newDate\r\n    // }\r\n\r\n    render() {\r\n        const { event } = this.props\r\n        const { collapsed } = this.state\r\n        return (\r\n            <div className=\"eventWrapper\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"event-summary\">\r\n                            {event.summary}\r\n                        </Card.Title>\r\n                        <Card.Text className=\"event-location\">\r\n                            Location: {event.location}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"event-start\">\r\n                            {event.start.dateTime}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"event-end\">\r\n                            {event.end.dateTime}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"event-timezone\">\r\n                            Timezone: {event.start.timeZone}\r\n                        </Card.Text>\r\n                        <div\r\n                            className={`event-expanded ${!this.state\r\n                                .collapsed}`}\r\n                        >\r\n                            <Card.Text className=\"event-description\">\r\n                                {event.description}\r\n                            </Card.Text>\r\n                        </div>\r\n                        <Button\r\n                            onClick={() => this.toggleCollapsed(collapsed)}\r\n                            className=\"event-toggle-button\"\r\n                            variant=\"primary\"\r\n                        >\r\n                            {this.state.collapsed\r\n                                ? 'Show Details'\r\n                                : 'Hide Details'}\r\n                        </Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event\r\n","import React, { Component } from 'react'\r\nimport Event from './Event'\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map((event) => (\r\n                    <li key={event.etag}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react'\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n    }\r\n    handleInputChanged = (event) => {\r\n        const { locations } = this.props\r\n        const value = event.target.value\r\n        const suggestions = locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1\r\n        })\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n        })\r\n    }\r\n    handleItemClicked = (suggestion) => {\r\n        const { updateEvents } = this.props\r\n        this.setState({\r\n            query: suggestion,\r\n        })\r\n\r\n        updateEvents(suggestion)\r\n    }\r\n    render() {\r\n        const { query, suggestions } = this.state\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >\r\n                            {suggestion}\r\n                        </li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked('all')}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CitySearch\r\n","import React, { Component } from 'react'\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        eventsNumber: localStorage.getItem('eventsNumber') || 32,\r\n    }\r\n\r\n    changeEventsNumber(eventsNumber) {\r\n        if (eventsNumber > 64) eventsNumber = 64\r\n        if (eventsNumber < 1) eventsNumber = 1\r\n        if (isNaN(eventsNumber)) eventsNumber = this.state.eventsNumber\r\n\r\n        this.setState(\r\n            {\r\n                eventsNumber,\r\n            },\r\n            () => {\r\n                localStorage.setItem('eventsNumber', eventsNumber)\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        const { eventsNumber } = this.state\r\n        return (\r\n            <div>\r\n                <input\r\n                    className=\"events-number\"\r\n                    type=\"number\"\r\n                    value={eventsNumber}\r\n                    onChange={(e) => {\r\n                        this.changeEventsNumber(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents\r\n","const mockData = [\r\n    {\r\n        kind: 'calendar#event',\r\n        etag: '\"3181161784712000\"',\r\n        // id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n        // status: 'confirmed',\r\n        // htmlLink:\r\n        //     'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n        // created: '2020-05-19T19:17:46.000Z',\r\n        // updated: '2020-05-27T12:01:32.356Z',\r\n        summary: 'Learn JavaScript',\r\n        description:\r\n            'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n        location: 'London, UK',\r\n        // creator: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        organizer: {\r\n            email: 'fullstackwebdev@careerfoundry.com',\r\n            self: true,\r\n        },\r\n        start: {\r\n            dateTime: '2020-05-19T16:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        end: {\r\n            dateTime: '2020-05-19T17:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        // recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n        // originalStartTime: {\r\n        //     dateTime: '2020-05-19T16:00:00+02:00',\r\n        //     timeZone: 'Europe/Berlin',\r\n        // },\r\n        // iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n        // sequence: 0,\r\n        // reminders: {\r\n        //     useDefault: true,\r\n        // },\r\n        // eventType: 'default',\r\n    },\r\n    {\r\n        kind: 'calendar#event',\r\n        etag: '\"3181159875584000\"',\r\n        // id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n        // status: 'confirmed',\r\n        // htmlLink:\r\n        //     'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n        // created: '2020-05-19T19:14:30.000Z',\r\n        // updated: '2020-05-27T11:45:37.792Z',\r\n        summary: 'React is Fun',\r\n        description:\r\n            'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n        location: 'Berlin, Germany',\r\n        // creator: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        // organizer: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        start: {\r\n            dateTime: '2020-05-20T14:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        end: {\r\n            dateTime: '2020-05-20T15:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        // recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n        // originalStartTime: {\r\n        //     dateTime: '2020-05-20T14:00:00+02:00',\r\n        //     timeZone: 'Europe/Berlin',\r\n        // },\r\n        // iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n        // sequence: 0,\r\n        // reminders: {\r\n        //     useDefault: true,\r\n        // },\r\n        // eventType: 'default',\r\n    }\r\n]\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data'\r\nimport axios from 'axios'\r\nimport NProgress from 'nprogress'\r\n\r\nexport const extractLocations = (events) => {\r\n    const extractLocations = events.map((event) => event.location)\r\n    const locations = [...new Set(extractLocations)]\r\n    return locations\r\n}\r\nexport const getEvents = async () => {\r\n    NProgress.start()\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done()\r\n        return mockData\r\n    }\r\n    const token = await getAccessToken()\r\n    if (token) {\r\n        removeQuery()\r\n        const url =\r\n            'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-events' +\r\n            '/' +\r\n            token\r\n        const result = await axios.get(url)\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events)\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data))\r\n            localStorage.setItem('locations', JSON.stringify(locations))\r\n        }\r\n        NProgress.done()\r\n        return result.data.events\r\n    }\r\n}\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token')\r\n    const tokenCheck = accessToken && (await checkToken(accessToken))\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token')\r\n        const searchParams = new URLSearchParams(window.location.search)\r\n        const code = await searchParams.get('code')\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\r\n            )\r\n            const { authUrl } = results.data\r\n            return (window.location.href = authUrl)\r\n        }\r\n        return code && getToken(code)\r\n    }\r\n    return accessToken\r\n}\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json())\r\n\r\n    return result\r\n}\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            '//' +\r\n            window.location.host +\r\n            window.location.pathname\r\n        window.history.pushState('', '', newurl)\r\n    } else {\r\n        newurl = window.location.protocol + '//' + window.location.host\r\n        window.history.pushState('', '', newurl)\r\n    }\r\n}\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((error) => error);\r\n  \r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n    return access_token;\r\n  };","import React, { Component } from 'react'\nimport EventList from './EventList'\nimport CitySearch from './CitySearch'\nimport NumberOfEvents from './NumberOfEvents'\nimport { extractLocations, getEvents } from './api.js'\nimport './App.css'\n\nclass App extends Component {\n    state = {\n        events: [],\n        locations: [],\n    }\n    componentDidMount() {\n        this.mounted = true\n        getEvents().then((events) => {\n            if (this.mounted) {\n                this.setState({ events, locations: extractLocations(events) })\n            }\n        })\n    }\n    componentWillUnmount() {\n        this.mounted = false\n    }\n    updateEvents = (location) => {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n          events :\n          events.filter((event) => event.location === location);\n        this.setState({\n          events: locationEvents\n        });\n      });\n    }\n    render() {\n        const { events, locations } = this.state\n        return (\n            <div className=\"App\">\n                <NumberOfEvents />\n                <CitySearch\n                    locations={locations}\n                    updateEvents={this.updateEvents}\n                />\n                <EventList events={events} />\n            </div>\n        )\n    }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}