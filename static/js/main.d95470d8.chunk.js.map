{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","event","this","props","Card","className","Body","Title","summary","Text","location","Date","start","dateTime","toString","slice","Button","onClick","setState","variant","description","Component","EventList","events","map","etag","CitySearch","displayedSelection","handleItemClicked","updateEvents","undefined","locations","Dropdown","Toggle","id","Menu","Item","value","NumberOfEvents","eventsNumber","localStorage","setItem","numberOfEvents","Form","Group","controlId","Control","type","min","max","onChange","e","changeEventsNumber","target","mockData","kind","organizer","email","self","timeZone","end","extractLocations","Set","getEvents","a","NProgress","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","result","data","JSON","stringify","accessToken","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","allEvents","currentLocation","eventCount","filter","mounted","Container","Row","Navbar","bg","expand","Brand","Collapse","Nav","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d95470d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/card'\r\nimport Button from 'react-bootstrap/button'\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        collapsed: true,\r\n    }\r\n\r\n    render() {\r\n        const { event } = this.props\r\n        const { collapsed } = this.state\r\n\r\n        return (\r\n            <Card className=\"event-card\">\r\n                <Card.Body>\r\n                    <div className=\"card-top\">\r\n                        <div className=\"card-top-left\">\r\n                            <Card.Title className=\"event-summary\">\r\n                                {event.summary}\r\n                            </Card.Title>\r\n                            <Card.Text className=\"event-details\">\r\n                                {event.location}\r\n                                <br />\r\n                                {new Date(event.start.dateTime)\r\n                                    .toString()\r\n                                    .slice(3, 21)}\r\n                            </Card.Text>\r\n                        </div>\r\n                        <div className=\"card-top-right\">\r\n                            <Button\r\n                                onClick={() =>\r\n                                    this.setState({ collapsed: !collapsed })\r\n                                }\r\n                                className=\"event-toggle-button\"\r\n                                variant=\"outline-secondary\"\r\n                            >\r\n                                {collapsed ? 'Show Details' : 'Hide Details'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <Card.Text\r\n                        className={`event-description ${\r\n                            collapsed ? 'd-none' : ''\r\n                        }`}\r\n                    >\r\n                        {event.description}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event\r\n","import React, { Component } from 'react'\r\nimport Event from './Event'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props\r\n        return (\r\n            <div className=\"EventList row\">\r\n                {events.map((event) => (\r\n                    <div\r\n                        className=\"col-sm-12 col-md-6 col-xxl-6 event-card-wrapper\"\r\n                        key={event.etag}\r\n                    >\r\n                        <Event event={event} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList\r\n","import React, { Component } from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        displayedSelection: '',\r\n    }\r\n\r\n    handleItemClicked = (location) => {\r\n        const { updateEvents } = this.props\r\n        this.setState({ displayedSelection: location })\r\n        updateEvents(location, undefined)\r\n    }\r\n    render() {\r\n        const { locations } = this.props\r\n        const { displayedSelection } = this.state\r\n\r\n        return (\r\n            <div className=\"CitySearch mt-3 mb-3\">\r\n                <Dropdown>\r\n                    <Dropdown.Toggle\r\n                        variant=\"outline-secondary\"\r\n                        id=\"dropdown-basic\"\r\n                    >\r\n                        Filter by city\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"suggestions\">\r\n                        <Dropdown.Item\r\n                            className=\"all-cities\"\r\n                            onClick={() => this.handleItemClicked('all')}\r\n                        >\r\n                            See all cities\r\n                        </Dropdown.Item>\r\n                        {locations.map((location) => (\r\n                            <Dropdown.Item\r\n                                className=\"city\"\r\n                                value={location}\r\n                                key={location}\r\n                                onClick={() => this.handleItemClicked(location)}\r\n                            >\r\n                                {location}\r\n                            </Dropdown.Item>\r\n                        ))}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <p>{displayedSelection}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CitySearch\r\n","import React, { Component } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nclass NumberOfEvents extends Component {\r\n    changeEventsNumber(eventsNumber) {\r\n        if (eventsNumber > 64) eventsNumber = 64\r\n        if (eventsNumber < 1) eventsNumber = 1\r\n        this.props.updateEvents(undefined, eventsNumber)\r\n        localStorage.setItem('numberOfEvents', eventsNumber)\r\n    }\r\n    render() {\r\n        const { numberOfEvents } = this.props\r\n        return (\r\n            <div className=\"numberOfEvents\">\r\n                <Form>\r\n                    <Form.Group className=\"number-of-events mt-3\"  controlId=\"formBasicEmail\">\r\n                        <Form.Control\r\n                            className=\"number-slider\"\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"64\"\r\n                            value={numberOfEvents}\r\n                            onChange={(e) => {\r\n                                this.changeEventsNumber(e.target.value)\r\n                            }}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Events displayed: {numberOfEvents}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents\r\n","const mockData = [\r\n    {\r\n        kind: 'calendar#event',\r\n        etag: '\"3181161784712000\"',\r\n        // id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n        // status: 'confirmed',\r\n        // htmlLink:\r\n        //     'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n        // created: '2020-05-19T19:17:46.000Z',\r\n        // updated: '2020-05-27T12:01:32.356Z',\r\n        summary: 'Learn JavaScript',\r\n        description:\r\n            'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n        location: 'London, UK',\r\n        // creator: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        organizer: {\r\n            email: 'fullstackwebdev@careerfoundry.com',\r\n            self: true,\r\n        },\r\n        start: {\r\n            dateTime: '2020-05-19T16:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        end: {\r\n            dateTime: '2020-05-19T17:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        // recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n        // originalStartTime: {\r\n        //     dateTime: '2020-05-19T16:00:00+02:00',\r\n        //     timeZone: 'Europe/Berlin',\r\n        // },\r\n        // iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n        // sequence: 0,\r\n        // reminders: {\r\n        //     useDefault: true,\r\n        // },\r\n        // eventType: 'default',\r\n    },\r\n    {\r\n        kind: 'calendar#event',\r\n        etag: '\"3181159875584000\"',\r\n        // id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n        // status: 'confirmed',\r\n        // htmlLink:\r\n        //     'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n        // created: '2020-05-19T19:14:30.000Z',\r\n        // updated: '2020-05-27T11:45:37.792Z',\r\n        summary: 'React is Fun',\r\n        description:\r\n            'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n        location: 'Berlin, Germany',\r\n        // creator: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        // organizer: {\r\n        //     email: 'fullstackwebdev@careerfoundry.com',\r\n        //     self: true,\r\n        // },\r\n        start: {\r\n            dateTime: '2020-05-20T14:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        end: {\r\n            dateTime: '2020-05-20T15:00:00+02:00',\r\n            timeZone: 'Europe/Berlin',\r\n        },\r\n        // recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n        // originalStartTime: {\r\n        //     dateTime: '2020-05-20T14:00:00+02:00',\r\n        //     timeZone: 'Europe/Berlin',\r\n        // },\r\n        // iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n        // sequence: 0,\r\n        // reminders: {\r\n        //     useDefault: true,\r\n        // },\r\n        // eventType: 'default',\r\n    }\r\n]\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data'\r\nimport axios from 'axios'\r\nimport NProgress from 'nprogress'\r\n\r\nexport const extractLocations = (events) => {\r\n    const extractLocations = events.map((event) => event.location)\r\n    const locations = [...new Set(extractLocations)]\r\n    return locations\r\n}\r\nexport const getEvents = async () => {\r\n    NProgress.start()\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done()\r\n        return mockData\r\n    }\r\n    const token = await getAccessToken()\r\n    if (token) {\r\n        removeQuery()\r\n        const url =\r\n            'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-events' +\r\n            '/' +\r\n            token\r\n        const result = await axios.get(url)\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events)\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data))\r\n            localStorage.setItem('locations', JSON.stringify(locations))\r\n        }\r\n        NProgress.done()\r\n        return result.data.events\r\n    }\r\n}\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token')\r\n    const tokenCheck = accessToken && (await checkToken(accessToken))\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token')\r\n        const searchParams = new URLSearchParams(window.location.search)\r\n        const code = await searchParams.get('code')\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\r\n            )\r\n            const { authUrl } = results.data\r\n            return (window.location.href = authUrl)\r\n        }\r\n        return code && getToken(code)\r\n    }\r\n    return accessToken\r\n}\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json())\r\n\r\n    return result\r\n}\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            '//' +\r\n            window.location.host +\r\n            window.location.pathname\r\n        window.history.pushState('', '', newurl)\r\n    } else {\r\n        newurl = window.location.protocol + '//' + window.location.host\r\n        window.history.pushState('', '', newurl)\r\n    }\r\n}\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      'https://tge27ua11j.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((error) => error);\r\n  \r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n    return access_token;\r\n  };","import React, { Component } from 'react'\n\nimport EventList from './EventList'\nimport CitySearch from './CitySearch'\nimport NumberOfEvents from './NumberOfEvents'\nimport { extractLocations, getEvents } from './api.js'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport './App.css'\n\nclass App extends Component {\n    state = {\n        allEvents: [],\n        events: [],\n        locations: [],\n        currentLocation: '',\n        numberOfEvents: localStorage.getItem('numberOfEvents') || 32,\n    }\n    componentDidMount() {\n        this.mounted = true\n        getEvents().then((events) => {\n            if (this.mounted) {\n                this.setState({\n                    events: events.slice(0, this.state.numberOfEvents),\n                    locations: extractLocations(events),\n                    allEvents: events,\n                })\n\n                //use this array instead of getEvents() on each update\n                this.setState({ allEvents: events })\n            }\n        })\n    }\n    componentWillUnmount() {\n        this.mounted = false\n    }\n    //TODO fix number change defaulting location\n    updateEvents = (location, eventCount) => {\n        let events = this.state.allEvents\n        if (!eventCount) {\n            this.setState({ currentLocation: location })\n            eventCount = this.state.numberOfEvents\n            events =\n                location === 'all'\n                    ? events\n                    : events.filter((event) => event.location === location)\n        }\n        this.setState({\n            events: events.slice(0, eventCount),\n            numberOfEvents: eventCount,\n        })\n    }\n\n    render() {\n        const { events, locations, numberOfEvents } = this.state\n        return (\n            <div className=\"App\">\n                <Container>\n                    <Row>\n                        <Navbar bg=\"light\" expand=\"xxl\">\n                            <Navbar.Brand>\n                                {/* <img\n                                    alt=\"\"\n                                    src=\"\"\n                                    width=\"30\"\n                                    height=\"30\"\n                                    className=\"d-inline-block align-top\"\n                                /> */}\n                                Meet\n                            </Navbar.Brand>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                <Nav className=\"inputFields\">\n                                    <div>\n                                        <NumberOfEvents\n                                            numberOfEvents={numberOfEvents}\n                                            updateEvents={this.updateEvents}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CitySearch\n                                            locations={locations}\n                                            updateEvents={this.updateEvents}\n                                        />\n                                    </div>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                    </Row>\n                    <EventList events={events} />\n                </Container>\n            </div>\n        )\n    }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}